%!PS-Adobe-3.0
%%Title: pyfile.py
%%For: robertbrothers
%%Creator: VIM - Vi IMproved 7.3 (2010 Aug 15)
%%CreationDate: Sun Oct 19 23:56:43 2014
%%DocumentData: Clean8Bit
%%Orientation: Portrait
%%Pages: (atend)
%%PageOrder: Ascend
%%BoundingBox: 59 49 564 800
%%DocumentMedia: A4 595 842 0 () ()
%%DocumentNeededResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-Oblique
%%+ font Courier-BoldOblique
%%DocumentSuppliedResources: procset VIM-Prolog 1.4 1
%%+ encoding VIM-latin1 1.0 0
%%Requirements: duplex collate color
%%EndComments
%%BeginDefaults
%%PageResources: font Courier
%%+ font Courier-Bold
%%+ font Courier-Oblique
%%+ font Courier-BoldOblique
%%PageMedia: A4
%%EndDefaults
%%BeginProlog
%%BeginResource: procset VIM-Prolog
%%BeginDocument: /usr/share/vim/vim73/print/prolog.ps
%!PS-Adobe-3.0 Resource-ProcSet
%%Title: VIM-Prolog
%%Version: 1.4 1
%%EndComments
% Editing of this file is NOT RECOMMENDED.  You run a very good risk of causing
% all PostScript printing from VIM failing if you do.  PostScript is not called
% a write-only language for nothing!
/packedarray where not{userdict begin/setpacking/pop load def/currentpacking
false def end}{pop}ifelse/CP currentpacking def true setpacking
/bd{bind def}bind def/ld{load def}bd/ed{exch def}bd/d/def ld
/db{dict begin}bd/cde{currentdict end}bd
/T true d/F false d
/SO null d/sv{/SO save d}bd/re{SO restore}bd
/L2 systemdict/languagelevel 2 copy known{get exec}{pop pop 1}ifelse 2 ge d
/m/moveto ld/s/show ld /ms{m s}bd /g/setgray ld/r/setrgbcolor ld/sp{showpage}bd
/gs/gsave ld/gr/grestore ld/cp/currentpoint ld
/ul{gs UW setlinewidth cp UO add 2 copy newpath m 3 1 roll add exch lineto
stroke gr}bd
/bg{gs r cp BO add 4 -2 roll rectfill gr}bd
/sl{90 rotate 0 exch translate}bd
L2{
/sspd{mark exch{setpagedevice}stopped cleartomark}bd
/nc{1 db/NumCopies ed cde sspd}bd
/sps{3 db/Orientation ed[3 1 roll]/PageSize ed/ImagingBBox null d cde sspd}bd
/dt{2 db/Tumble ed/Duplex ed cde sspd}bd
/c{1 db/Collate ed cde sspd}bd
}{
/nc{/#copies ed}bd
/sps{statusdict/setpage get exec}bd
/dt{statusdict/settumble 2 copy known{get exec}{pop pop pop}ifelse
statusdict/setduplexmode 2 copy known{get exec}{pop pop pop}ifelse}bd
/c{pop}bd
}ifelse
/ffs{findfont exch scalefont d}bd/sf{setfont}bd
/ref{1 db findfont dup maxlength dict/NFD ed{exch dup/FID ne{exch NFD 3 1 roll
put}{pop pop}ifelse}forall/Encoding findresource dup length 256 eq{NFD/Encoding
3 -1 roll put}{pop}ifelse NFD dup/FontType get 3 ne{/CharStrings}{/CharProcs}
ifelse 2 copy known{2 copy get dup maxlength dict copy[/questiondown/space]{2
copy known{2 copy get 2 index/.notdef 3 -1 roll put pop exit}if pop}forall put
}{pop pop}ifelse dup NFD/FontName 3 -1 roll put NFD definefont pop end}bd
CP setpacking
(\004)cvn{}bd
% vim:ff=unix:
%%EOF
%%EndDocument
%%EndResource
%%BeginResource: encoding VIM-latin1
%%BeginDocument: /usr/share/vim/vim73/print/latin1.ps
%!PS-Adobe-3.0 Resource-Encoding
%%Title: VIM-latin1
%%Version: 1.0 0
%%EndComments
/VIM-latin1[
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclam /quotedbl /numbersign /dollar /percent /ampersand /quotesingle
/parenleft /parenright /asterisk /plus /comma /minus /period /slash
/zero /one /two /three /four /five /six /seven
/eight /nine /colon /semicolon /less /equal /greater /question
/at /A /B /C /D /E /F /G
/H /I /J /K /L /M /N /O
/P /Q /R /S /T /U /V /W
/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
/grave /a /b /c /d /e /f /g
/h /i /j /k /l /m /n /o
/p /q /r /s /t /u /v /w
/x /y /z /braceleft /bar /braceright /asciitilde /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen /registered /macron
/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph /periodcentered
/cedilla /onesuperior /ordmasculine /guillemotright /onequarter /onehalf /threequarters /questiondown
/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex /Idieresis
/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn /germandbls
/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex /idieresis
/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn /ydieresis]
/Encoding defineresource pop
% vim:ff=unix:
%%EOF
%%EndDocument
%%EndResource
%%EndProlog
%%BeginSetup
595 842 0 sps
1 nc
T F dt
T c
%%IncludeResource: font Courier
/_F0 /VIM-latin1 /Courier ref
/F0 10 /_F0 ffs
%%IncludeResource: font Courier-Bold
/_F1 /VIM-latin1 /Courier-Bold ref
/F1 10 /_F1 ffs
%%IncludeResource: font Courier-Oblique
/_F2 /VIM-latin1 /Courier-Oblique ref
/F2 10 /_F2 ffs
%%IncludeResource: font Courier-BoldOblique
/_F3 /VIM-latin1 /Courier-BoldOblique ref
/F3 10 /_F3 ffs
/UO -1 d
/UW 0.5 d
/BO -2.5 d
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
sv
0 g
F0 sf
%%EndPageSetup
F1 sf
(pyfile.py                                                                     Page 1)59.5 792.4 ms
F0 sf
0 0 1 r
(#!/usr/bin/env python)59.5 772.4 ms
1 0 1 r
(import)59.5 752.4 ms
0 g
( numpy )s
1 1 0 r
(as)s
0 g
( np, Kinematic_Characteristics )s
1 1 0 r
(as)s
0 g
( kc)s
0 0 1 r
(# function to calculate instantaneous rotational characteristic)59.5 732.4 ms
1 1 0 r
(def)59.5 722.4 ms
0 g
( )s
0 1 1 r
(torquei)s
0 g
(\(alpha, length_to_cg, mass, theta\):)s
(  )59.5 712.4 ms
1 1 0 r
(return)s
0 g
( alpha*mass/length_to_cg-gravity*np.sin\(theta\))s
1 1 0 r
(def)59.5 702.4 ms
0 g
( )s
0 1 1 r
(thetatt)s
0 g
(\(torque, length_to_cg, mass, theta\):)s
(  )59.5 692.4 ms
1 1 0 r
(return)s
0 g
( torque*length_to_cg/mass+gravity*np.sin\(theta\))s
1 1 0 r
(def)59.5 682.4 ms
0 g
( )s
0 1 1 r
(thetat)s
0 g
(\(theta_tt, current_time, previous_time\):)s
(  )59.5 672.4 ms
1 1 0 r
(return)s
0 g
( theta_tt*\(current_time-previous_time\))s
1 1 0 r
(def)59.5 662.4 ms
0 g
( )s
0 1 1 r
(theta)s
0 g
(\(theta_tt, theta_t, theta_i, current_time, previous_time\):)s
(  )59.5 652.4 ms
1 1 0 r
(return)s
0 g
( \()s
(    theta_tt*\(current_time**)59.5 642.4 ms
1 0 0 r
(2)s
0 g
(-previous_time**)s
1 0 0 r
(2)s
0 g
(\)/)s
1 0 0 r
(2)s
0 g
( +)s
(    theta_t *\(current_time   -previous_time\) +)59.5 632.4 ms
(    theta_i)59.5 622.4 ms
(    \))59.5 612.4 ms
0 0 1 r
(# calculate the instantaneous radial characteristics)59.5 592.4 ms
1 1 0 r
(def)59.5 582.4 ms
0 g
( )s
0 1 1 r
(rtt)s
0 g
(\(torque, length_of_driver, mass, mech_adv, theta_t, r, theta_i\):)s
(  )59.5 572.4 ms
1 1 0 r
(return)s
0 g
( \(theta_t**)s
1 0 0 r
(2)s
0 g
(/r +)s
(    gravity*np.cos\(theta\) +)59.5 562.4 ms
(    torque*length_of_driver*mech_adv/mass)59.5 552.4 ms
(    \))59.5 542.4 ms
1 1 0 r
(def)59.5 532.4 ms
0 g
( )s
0 1 1 r
(rt)s
0 g
(\(r_tt, current_time, previous_time\):)s
(  )59.5 522.4 ms
1 1 0 r
(return)s
0 g
( r_tt*\(current_time-previous_time\))s
1 1 0 r
(def)59.5 512.4 ms
0 g
( )s
0 1 1 r
(r)s
0 g
(\(r_tt, r_t, r_i, current_time, previous_time\):)s
(  )59.5 502.4 ms
1 1 0 r
(return)s
0 g
( \()s
(    r_tt*\(current_time**)59.5 492.4 ms
1 0 0 r
(2)s
0 g
(-previou_time**)s
1 0 0 r
(2)s
0 g
(\)/)s
1 0 0 r
(2)s
0 g
( +)s
(    r_t *\(current_time - previous_time\) +)59.5 482.4 ms
(    r_i)59.5 472.4 ms
(    \))59.5 462.4 ms
0 0 1 r
(# calulate dynamic characteristics with constant acceleration calculating motor )59.5 442.4 ms
(# - torque)59.5 432.4 ms
1 1 0 r
(def)59.5 422.4 ms
0 g
( )s
0 1 1 r
(update_rotational)s
0 g
(\( alpha, mass, iterations, time_limit, initial_position,\):)s
(  step_size = time_limit/)59.5 412.4 ms
0 1 1 r
(float)s
0 g
(\(iterations\))s
(  time = np.arange\()59.5 402.4 ms
1 0 0 r
(0)s
0 g
(, \(time_limit + step_size\), step_size\))s
(  position = np.array\([]\))59.5 392.4 ms
(  velocity = np.array\([]\))59.5 382.4 ms
(  motor_torque = np.array\([]\))59.5 372.4 ms
(  )59.5 362.4 ms
1 1 0 r
(for)s
0 g
( i )s
1 1 0 r
(in)s
0 g
( )s
0 1 1 r
(range)s
0 g
(\()s
0 1 1 r
(len)s
0 g
(\(time\)\):)s
(    current_time = time[i])59.5 352.4 ms
(    previous_time = time[i-)59.5 342.4 ms
1 0 0 r
(1)s
0 g
(])s
(    )59.5 332.4 ms
1 1 0 r
(if)s
0 g
( i == )s
1 0 0 r
(0)s
0 g
(:)s
(      previous_time = current_time)59.5 322.4 ms
(    theta_i = theta\(alpha, theta_t, theta_i, current_time, previous_time\))59.5 312.4 ms
(    theta_t = thetat\(alpha, current_time, previous_time\))59.5 302.4 ms
(    motor_torque  = atorguei\(alpha, length_to_cg, mass, theta\))59.5 292.4 ms
(    )59.5 282.4 ms
0 0 1 r
(# append values to arrays)s
0 g
(    position = np.concatenate\(\(position, np.array\([theta_i]\)\)\))59.5 272.4 ms
(    velocity = np.concatenate\(\(velocity, np.array\([theta_t]\)\)\))59.5 262.4 ms
(    motor_torque = np.concatenate\(\(motor_torque, np.array\([torque]\)\)\))59.5 252.4 ms
(  )59.5 242.4 ms
1 1 0 r
(return)s
0 g
( position, velocity, motor_torque)s
0 0 1 r
(# calculate the radial dynamic chararteristics)59.5 222.4 ms
1 1 0 r
(def)59.5 212.4 ms
0 g
( )s
0 1 1 r
(update_radial)s
0 g
(\(\):)s
(  time = np.arange\()59.5 202.4 ms
1 0 0 r
(0)s
0 g
(, \(time_limit + step_size\), step_size\))s
(  positition = np.array\([]\))59.5 192.4 ms
(  velocity = np.array\([]\))59.5 182.4 ms
(  motor_torque = np.array\([]\))59.5 172.4 ms
(  )59.5 162.4 ms
1 1 0 r
(for)s
0 g
( i )s
1 1 0 r
(in)s
0 g
( )s
0 1 1 r
(range)s
0 g
(\()s
0 1 1 r
(len)s
0 g
(\(time\)\):)s
(    current_time = time[i])59.5 152.4 ms
(    previous_time = time[i-)59.5 142.4 ms
1 0 0 r
(1)s
0 g
(])s
(    )59.5 132.4 ms
1 1 0 r
(if)s
0 g
( i == )s
1 0 0 r
(0)s
0 g
(:)s
(        previous_time = current_time)59.5 122.4 ms
(    r_i  = r\(r_tt, r_t, r_i, current_time, previous_time\))59.5 112.4 ms
(    r_t  = rt\(r_tt, current_time, previous_time\))59.5 102.4 ms
(    motor_torque = rtorque\(acceleration, length_of_driver, mass, mech_adv, theta_t, )59.5 92.4 ms
(r, theta_i\))59.5 82.4 ms
(    position = np.concatenate\(\(position, np.array\([r_i]\)\)\))59.5 72.4 ms
(    velocity = np.concatenate\(\(velocity, np.array\([r_t]\)\)\))59.5 62.4 ms
(    motor_torque = np.concatenate\(\(motor_torque, np.array\([torque]\)\)\))59.5 52.4 ms
re sp
%%PageTrailer
%%Page: 2 2
%%BeginPageSetup
sv
0 g
F0 sf
%%EndPageSetup
F1 sf
(pyfile.py                                                                     Page 2)59.5 792.4 ms
F0 sf
(  )59.5 762.4 ms
1 1 0 r
(return)s
0 g
( position, velocity, motor_torque)s
0 0 1 r
(# get the calculate the necessary values)59.5 742.4 ms
1 1 0 r
(def)59.5 732.4 ms
0 g
( )s
0 1 1 r
(get_requirement)s
0 g
(\(\):)s
(  length_of_leg = )59.5 722.4 ms
1 0 0 r
(.5)s
0 g
(  )59.5 712.4 ms
0 0 1 r
(# time of slider is .2s)s
0 g
(  time_of_slider = )59.5 702.4 ms
1 0 0 r
(.2)s
0 g
(  slider_time_step_size = time_of_slider/)59.5 692.4 ms
1 0 0 r
(100.0)s
0 g
(  )59.5 682.4 ms
0 0 1 r
(# time of leg is 2*l*sin\(theta\)/velocity)s
0 g
(  time_of_swing = )59.5 672.4 ms
1 0 0 r
(2)s
0 g
(*length_of_leg*np.sin\()s
1 0 0 r
(15.0)s
0 g
(*np.pi/)s
1 0 0 r
(180)s
0 g
(\)/)s
1 0 0 r
(.5)s
0 g
(  swing_time_step_size = time_of_swing/)59.5 662.4 ms
1 0 0 r
(100)s
0 g
(  )59.5 652.4 ms
0 0 1 r
(# theta range is -15 to 15)s
0 g
(  theta_swing_max_min = np.array\([-)59.5 642.4 ms
1 0 0 r
(15.0)s
0 g
(, )s
1 0 0 r
(15.0)s
0 g
(]\))s
(  swing_step_size = \()59.5 632.4 ms
1 0 0 r
(15.0)s
0 g
(+)s
1 0 0 r
(15)s
0 g
(\)/)s
1 0 0 r
(100.0)s
0 g
(  )59.5 622.4 ms
0 0 1 r
(# length of the driver is .125 m)s
0 g
(  length_of_driver = )59.5 612.4 ms
1 0 0 r
(.1)s
0 g
(  )59.5 602.4 ms
0 0 1 r
(# mass of the leg 1.0292kg)s
0 g
(  mass_of_leg = )59.5 592.4 ms
1 0 0 r
(1.0292)s
0 g
(  )59.5 582.4 ms
0 0 1 r
(# theta of the driver range is from 20 - 75 degrees)s
0 g
(  theta_driver_max_min = np.array\([)59.5 572.4 ms
1 0 0 r
(20.0)s
0 g
(,)s
1 0 0 r
(75.0)s
0 g
(]\))s
(  driver_step_size = \()59.5 562.4 ms
1 0 0 r
(75.0)s
0 g
(-)s
1 0 0 r
(20.0)s
0 g
(\)/)s
1 0 0 r
(100.0)s
0 g
(  )59.5 552.4 ms
0 0 1 r
(# declare position vectors)s
0 g
(  pvec1 = np.array\([np.amin\(theta_swing_max_min\), np)59.5 542.4 ms
(  )59.5 522.4 ms
0 0 1 r
(#determine necessary rotational acceleration)s
0 g
(  alpha = kc.acceleration_necessary\( )59.5 512.4 ms
1 0 0 r
(0)s
0 g
(, pvec1, pvec2, time\)[)s
1 0 0 r
(0)s
0 g
(])s
(  rotational_chars = update_rotational\( alpha, mass, iterations, time_limit, initial)59.5 492.4 ms
(_position,\))59.5 482.4 ms
(  )59.5 472.4 ms
0 1 1 r
(print)s
0 g
( rotational_chars)s
(  )59.5 462.4 ms
1 1 0 r
(return)s
0 g
( requrements)s
1 1 0 r
(if)59.5 432.4 ms
0 g
( __name__ == )s
1 0 0 r
("__main__")s
0 g
(:)s
(  get_requirement\(\))59.5 422.4 ms
re sp
%%PageTrailer
%%Trailer
%%Pages: 2
%%EOF
